#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Tomlrb
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,    13,    11,    23,    12,    23,    61,    17,    19,    18,
    62,    24,     8,    28,    29,    10,    25,    21,    15,    21,
    45,    46,    47,    48,    44,    41,    40,    42,    43,    34,
    53,    54,    10,    45,    46,    47,    48,    44,    41,    40,
    42,    43,    34,    26,    31,    10,    45,    46,    47,    48,
    44,    41,    40,    42,    43,    34,    50,   nil,    10,    45,
    46,    47,    48,    44,    41,    40,    42,    43,    34,    57,
   nil,    10,    45,    46,    47,    48,    44,    41,    40,    42,
    43,    34,    57,    17,    10,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    15 ]

racc_action_check = [
     1,     2,     1,     9,     1,    54,    58,     7,     8,     7,
    58,    11,     1,    16,    16,     1,    12,     9,     7,    54,
    24,    24,    24,    24,    24,    24,    24,    24,    24,    24,
    30,    30,    24,    25,    25,    25,    25,    25,    25,    25,
    25,    25,    25,    15,    22,    25,    31,    31,    31,    31,
    31,    31,    31,    31,    31,    31,    28,   nil,    31,    33,
    33,    33,    33,    33,    33,    33,    33,    33,    33,    33,
   nil,    33,    62,    62,    62,    62,    62,    62,    62,    62,
    62,    62,    62,    29,    62,    29,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29 ]

racc_action_pointer = [
   nil,     0,     1,   nil,   nil,   nil,   nil,     5,    -4,     1,
   nil,    -7,    -2,   nil,   nil,    30,     0,   nil,   nil,   nil,
   nil,   nil,    26,   nil,    17,    30,   nil,   nil,    43,    81,
    14,    43,   nil,    56,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,    -7,   nil,
   nil,   nil,    69,   nil ]

racc_action_default = [
    -1,   -48,   -48,    -2,    -3,    -4,    -5,   -48,    -8,   -48,
   -18,   -48,   -48,    64,    -6,   -10,   -48,   -15,   -16,    -7,
   -17,   -19,   -48,   -23,   -38,   -38,    -9,   -11,   -13,   -48,
   -48,   -38,   -25,   -38,   -32,   -33,   -34,   -35,   -36,   -37,
   -39,   -40,   -41,   -42,   -43,   -44,   -45,   -46,   -47,   -26,
   -12,   -14,   -20,   -21,   -48,   -24,   -27,   -28,   -48,   -22,
   -29,   -30,   -38,   -31 ]

racc_goto_table = [
    20,    56,    14,    32,    49,     1,     3,     4,     5,     6,
    55,     7,    27,    30,    52,    60,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    51,   nil,   nil,   nil,   nil,   nil,
    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    59 ]

racc_goto_check = [
    11,    18,     7,    15,    15,     1,     2,     3,     4,     5,
    15,     6,     9,    13,    14,    19,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    11 ]

racc_goto_pointer = [
   nil,     5,     5,     6,     7,     8,    10,    -5,   nil,    -4,
   nil,    -9,   nil,    -9,   -16,   -21,   nil,   nil,   -32,   -43,
   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    37,   nil,   nil,    16,   nil,
     9,   nil,    22,   nil,   nil,    58,    36,    33,   nil,   nil,
    35,    38,    39 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 20, :_reduce_none,
  2, 20, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  2, 22, :_reduce_none,
  2, 25, :_reduce_7,
  1, 25, :_reduce_8,
  2, 26, :_reduce_9,
  1, 26, :_reduce_10,
  2, 26, :_reduce_none,
  2, 28, :_reduce_12,
  1, 28, :_reduce_13,
  2, 28, :_reduce_none,
  1, 27, :_reduce_15,
  1, 27, :_reduce_16,
  2, 24, :_reduce_none,
  1, 29, :_reduce_18,
  1, 30, :_reduce_19,
  3, 30, :_reduce_none,
  1, 33, :_reduce_21,
  2, 33, :_reduce_none,
  1, 31, :_reduce_23,
  2, 32, :_reduce_none,
  3, 23, :_reduce_25,
  3, 23, :_reduce_26,
  2, 35, :_reduce_none,
  1, 37, :_reduce_28,
  2, 37, :_reduce_none,
  1, 38, :_reduce_30,
  2, 38, :_reduce_none,
  1, 36, :_reduce_32,
  1, 34, :_reduce_33,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  0, 41, :_reduce_none,
  1, 41, :_reduce_39,
  1, 41, :_reduce_40,
  1, 41, :_reduce_41,
  1, 41, :_reduce_42,
  1, 41, :_reduce_43,
  1, 40, :_reduce_44,
  1, 40, :_reduce_45,
  1, 40, :_reduce_46,
  1, 40, :_reduce_47 ]

racc_reduce_n = 48

racc_shift_n = 64

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :STRING_MULTI => 3,
  :STRING_BASIC => 4,
  :STRING_LITERAL_MULTI => 5,
  :STRING_LITERAL => 6,
  :DATETIME => 7,
  :INTEGER => 8,
  :FLOAT => 9,
  :TRUE => 10,
  :FALSE => 11,
  "[" => 12,
  "]" => 13,
  "." => 14,
  "{" => 15,
  "}" => 16,
  "," => 17,
  "=" => 18 }

racc_nt_base = 19

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "STRING_MULTI",
  "STRING_BASIC",
  "STRING_LITERAL_MULTI",
  "STRING_LITERAL",
  "DATETIME",
  "INTEGER",
  "FLOAT",
  "TRUE",
  "FALSE",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\"=\"",
  "$start",
  "expressions",
  "expression",
  "table",
  "assignment",
  "inline_table",
  "table_start",
  "table_continued",
  "table_identifier",
  "table_next",
  "inline_table_start",
  "inline_continued",
  "inline_assignment_key",
  "inline_assignment_value",
  "inline_next",
  "value",
  "array",
  "start_array",
  "array_continued",
  "array_next",
  "scalar",
  "string",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_7(val, _values, result)
     @handler.start_(:array_of_tables) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_8(val, _values, result)
     @handler.start_(:table) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_9(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_10(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_12(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_13(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_15(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_16(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_18(val, _values, result)
     @handler.start_(:inline) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_19(val, _values, result)
     array = @handler.end_(:inline); @handler.push(Hash[*array]) 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_21(val, _values, result)
     array = @handler.end_(:inline); @handler.push(Hash[*array]) 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_23(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_25(val, _values, result)
     @handler.assign(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_26(val, _values, result)
     @handler.assign(val[0]) 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_28(val, _values, result)
     array = @handler.end_(:array); @handler.push(array) 
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_30(val, _values, result)
     array = @handler.end_(:array); @handler.push(array) 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_32(val, _values, result)
     @handler.start_(:array) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_33(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_39(val, _values, result)
     result = val[0].to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_40(val, _values, result)
     result = val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_41(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_42(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_43(val, _values, result)
     result = Time.new(*val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_44(val, _values, result)
     result = StringUtils.replace_escaped_chars(StringUtils.multiline_replacements(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_45(val, _values, result)
     result = StringUtils.replace_escaped_chars(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_46(val, _values, result)
     result = StringUtils.replace_escaped_chars(StringUtils.strip_spaces(val[0])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_47(val, _values, result)
     result = StringUtils.strip_spaces(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Tomlrb
