#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Tomlrb
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     8,     7,     7,    30,    31,     7,    11,     5,     5,    25,
    24,    21,    22,    23,    15,    27,    25,    24,    21,    22,
    23,    15,    27,    25,    24,    21,    22,    23,    15,    12,
    13 ]

racc_action_check = [
     1,     0,     1,    28,    28,     5,     6,     0,     1,    14,
    14,    14,    14,    14,    14,    14,    31,    31,    31,    31,
    31,    31,    31,    11,    11,    11,    11,    11,    11,     8,
    10 ]

racc_action_pointer = [
    -1,     0,   nil,   nil,   nil,     3,    -5,   nil,    29,   nil,
    21,    20,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -6,   nil,
   nil,    13,   nil ]

racc_action_default = [
   -25,   -25,    -2,    -3,    -4,   -25,   -25,   -24,   -25,    -1,
   -25,   -18,    33,    -5,   -18,   -11,   -13,   -14,   -15,   -16,
   -17,   -19,   -20,   -21,   -22,   -23,    -6,    -7,   -25,    -8,
    -9,   -18,   -10 ]

racc_goto_table = [
    26,     2,     9,     1,    10,    16,    29,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32 ]

racc_goto_check = [
     8,     2,     2,     1,     5,     9,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,     3,     1,   nil,   nil,    -1,   nil,   nil,   -14,    -6,
   -22,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     6,    18,    14,   nil,    28,
   nil,   nil,    17,    19,    20 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 13, :_reduce_none,
  1, 13, :_reduce_none,
  1, 14, :_reduce_none,
  1, 14, :_reduce_none,
  3, 15, :_reduce_5,
  2, 18, :_reduce_none,
  1, 20, :_reduce_7,
  2, 20, :_reduce_none,
  1, 22, :_reduce_9,
  2, 22, :_reduce_none,
  1, 19, :_reduce_11,
  1, 23, :_reduce_none,
  3, 16, :_reduce_13,
  1, 21, :_reduce_14,
  1, 21, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  0, 26, :_reduce_none,
  1, 26, :_reduce_19,
  1, 26, :_reduce_20,
  1, 26, :_reduce_21,
  1, 26, :_reduce_none,
  1, 25, :_reduce_none,
  1, 17, :_reduce_none ]

racc_reduce_n = 25

racc_shift_n = 33

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :STRING => 3,
  :DATETIME => 4,
  :NUMBER => 5,
  :TRUE => 6,
  :FALSE => 7,
  "[" => 8,
  "]" => 9,
  "," => 10,
  "=" => 11 }

racc_nt_base = 12

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "STRING",
  "DATETIME",
  "NUMBER",
  "TRUE",
  "FALSE",
  "\"[\"",
  "\"]\"",
  "\",\"",
  "\"=\"",
  "$start",
  "expressions",
  "expression",
  "table",
  "assignment",
  "identifier",
  "array",
  "start_array",
  "array_continued",
  "value",
  "array_next",
  "end_array",
  "scalar",
  "string",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_5(val, _values, result)
     @handler.set_context(val[1]) 
    result
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_7(val, _values, result)
     @handler.end_array 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_9(val, _values, result)
     @handler.end_array 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_11(val, _values, result)
     @handler.start_array 
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_13(val, _values, result)
     @handler.assign(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_14(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_19(val, _values, result)
     n = val[0]; result = n.count('.') > 0 ? n.to_f : n.to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_20(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_21(val, _values, result)
     result = false 
    result
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Tomlrb
