#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.5.0
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Tomlrb
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,    44,    14,    42,    15,    43,    16,    47,    48,    23,
    37,    17,    18,    19,    20,    12,    45,    51,    21,    22,
     8,    52,    40,    10,    80,    40,    74,    75,    76,    77,
    70,    71,    72,    73,    64,    65,    66,    67,    61,    62,
    63,    68,    69,    55,    84,    85,    10,    74,    75,    76,
    77,    70,    71,    72,    73,    64,    65,    66,    67,    61,
    62,    63,    68,    69,    55,    42,   nil,    10,    74,    75,
    76,    77,    70,    71,    72,    73,    64,    65,    66,    67,
    61,    62,    63,    68,    69,    55,    88,   nil,    10,    74,
    75,    76,    77,    70,    71,    72,    73,    64,    65,    66,
    67,    61,    62,    63,    68,    69,    55,    88,    28,    10,
    29,    92,    30,   nil,   nil,    93,   nil,    31,    32,    33,
    34,   nil,   nil,   nil,    35,    36,    28,    25,    29,   nil,
    30,   nil,   nil,   nil,   nil,    31,    32,    33,    34,   nil,
   nil,   nil,    35,    36,    14,    25,    15,   nil,    16,   nil,
   nil,   nil,   nil,    17,    18,    19,    20,    79,   nil,   nil,
    21,    22 ]

racc_action_check = [
     1,    11,     1,     9,     1,    11,     1,    26,    26,     2,
     8,     1,     1,     1,     1,     1,    25,    41,     1,     1,
     1,    41,    39,     1,    47,     9,    43,    43,    43,    43,
    43,    43,    43,    43,    43,    43,    43,    43,    43,    43,
    43,    43,    43,    43,    50,    51,    43,    52,    52,    52,
    52,    52,    52,    52,    52,    52,    52,    52,    52,    52,
    52,    52,    52,    52,    52,    84,   nil,    52,    54,    54,
    54,    54,    54,    54,    54,    54,    54,    54,    54,    54,
    54,    54,    54,    54,    54,    54,    54,   nil,    54,    93,
    93,    93,    93,    93,    93,    93,    93,    93,    93,    93,
    93,    93,    93,    93,    93,    93,    93,    93,     7,    93,
     7,    89,     7,   nil,   nil,    89,   nil,     7,     7,     7,
     7,   nil,   nil,   nil,     7,     7,    48,     7,    48,   nil,
    48,   nil,   nil,   nil,   nil,    48,    48,    48,    48,   nil,
   nil,   nil,    48,    48,    44,    48,    44,   nil,    44,   nil,
   nil,   nil,   nil,    44,    44,    44,    44,    44,   nil,   nil,
    44,    44 ]

racc_action_pointer = [
   nil,     0,     9,   nil,   nil,   nil,   nil,   106,   -10,     1,
   nil,   -21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    -5,   -14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -2,
   nil,    -5,   nil,    23,   142,   nil,   nil,     3,   124,   nil,
    19,    43,    44,   nil,    65,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,    90,
   nil,   nil,   nil,    86,   nil ]

racc_action_default = [
    -1,   -79,   -79,    -2,    -3,    -4,    -5,   -79,    -8,   -79,
   -28,   -79,   -39,   -40,   -41,   -42,   -43,   -44,   -45,   -46,
   -47,   -48,   -49,    95,    -6,   -10,   -79,   -16,   -17,   -18,
   -19,   -20,   -21,   -22,   -23,   -24,   -25,    -7,   -26,   -79,
   -29,   -79,   -34,   -61,   -79,    -9,   -11,   -13,   -79,   -27,
   -30,   -79,   -61,   -36,   -61,   -55,   -56,   -57,   -58,   -59,
   -60,   -62,   -63,   -64,   -65,   -66,   -67,   -68,   -69,   -70,
   -71,   -72,   -73,   -74,   -75,   -76,   -77,   -78,   -37,   -38,
   -12,   -14,   -15,   -31,   -79,   -33,   -35,   -50,   -51,   -79,
   -32,   -52,   -53,   -61,   -54 ]

racc_goto_table = [
    39,    13,    24,    87,    27,    38,    53,     1,     3,     4,
     5,     6,     7,    46,    50,    86,    83,    11,    91,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,   nil,
   nil,   nil,    94,    81,    78,    82,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    90 ]

racc_goto_check = [
    13,    19,     7,    22,    10,    12,    17,     1,     2,     3,
     4,     5,     6,     9,    15,    17,    16,    18,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,
   nil,   nil,    22,     7,    19,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    13 ]

racc_goto_pointer = [
   nil,     7,     7,     8,     9,    10,    11,    -5,   nil,   -13,
    -3,   nil,    -4,    -9,   nil,   -27,   -34,   -37,    16,     0,
   nil,   nil,   -51,   -71,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    58,   nil,   nil,    26,   nil,
   nil,     9,   nil,   nil,    41,   nil,   nil,    89,   nil,   nil,
    57,    54,   nil,   nil,    56,    59,    60 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 28, :_reduce_none,
  2, 28, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  2, 30, :_reduce_none,
  2, 33, :_reduce_7,
  1, 33, :_reduce_8,
  2, 34, :_reduce_9,
  1, 34, :_reduce_10,
  2, 34, :_reduce_none,
  2, 36, :_reduce_12,
  1, 36, :_reduce_13,
  2, 36, :_reduce_none,
  3, 35, :_reduce_15,
  1, 35, :_reduce_16,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  2, 32, :_reduce_none,
  3, 32, :_reduce_none,
  1, 38, :_reduce_28,
  1, 39, :_reduce_29,
  2, 40, :_reduce_none,
  3, 40, :_reduce_none,
  2, 43, :_reduce_none,
  3, 41, :_reduce_33,
  1, 41, :_reduce_34,
  2, 42, :_reduce_none,
  3, 31, :_reduce_36,
  3, 45, :_reduce_37,
  3, 45, :_reduce_38,
  1, 45, :_reduce_39,
  1, 45, :_reduce_40,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  2, 47, :_reduce_none,
  1, 49, :_reduce_51,
  2, 49, :_reduce_none,
  1, 50, :_reduce_53,
  2, 50, :_reduce_none,
  1, 48, :_reduce_55,
  1, 44, :_reduce_56,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  0, 53, :_reduce_none,
  1, 53, :_reduce_62,
  1, 53, :_reduce_63,
  1, 53, :_reduce_64,
  1, 53, :_reduce_65,
  1, 53, :_reduce_66,
  1, 53, :_reduce_67,
  1, 53, :_reduce_68,
  1, 53, :_reduce_69,
  1, 53, :_reduce_70,
  1, 53, :_reduce_71,
  1, 53, :_reduce_72,
  1, 53, :_reduce_73,
  1, 53, :_reduce_74,
  1, 52, :_reduce_75,
  1, 52, :_reduce_76,
  1, 52, :_reduce_77,
  1, 52, :_reduce_78 ]

racc_reduce_n = 79

racc_shift_n = 95

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :STRING_MULTI => 3,
  :STRING_BASIC => 4,
  :STRING_LITERAL_MULTI => 5,
  :STRING_LITERAL => 6,
  :DATETIME => 7,
  :LOCAL_DATETIME => 8,
  :LOCAL_DATE => 9,
  :LOCAL_TIME => 10,
  :INTEGER => 11,
  :HEX_INTEGER => 12,
  :OCT_INTEGER => 13,
  :BIN_INTEGER => 14,
  :FLOAT => 15,
  :FLOAT_INF => 16,
  :FLOAT_NAN => 17,
  :TRUE => 18,
  :FALSE => 19,
  "[" => 20,
  "]" => 21,
  "." => 22,
  "{" => 23,
  "}" => 24,
  "," => 25,
  "=" => 26 }

racc_nt_base = 27

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "STRING_MULTI",
  "STRING_BASIC",
  "STRING_LITERAL_MULTI",
  "STRING_LITERAL",
  "DATETIME",
  "LOCAL_DATETIME",
  "LOCAL_DATE",
  "LOCAL_TIME",
  "INTEGER",
  "HEX_INTEGER",
  "OCT_INTEGER",
  "BIN_INTEGER",
  "FLOAT",
  "FLOAT_INF",
  "FLOAT_NAN",
  "TRUE",
  "FALSE",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\"=\"",
  "$start",
  "expressions",
  "expression",
  "table",
  "assignment",
  "inline_table",
  "table_start",
  "table_continued",
  "table_identifier",
  "table_next",
  "table_identifier_component",
  "inline_table_start",
  "inline_table_end",
  "inline_continued",
  "inline_assignment_key",
  "inline_assignment_value",
  "inline_next",
  "value",
  "assignment_key",
  "assignment_key_component",
  "array",
  "start_array",
  "array_continued",
  "array_next",
  "scalar",
  "string",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_7(val, _values, result)
     @handler.start_(:array_of_tables)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_8(val, _values, result)
     @handler.start_(:table)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_9(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_10(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array)
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_12(val, _values, result)
     array = @handler.end_(:array_of_tables); @handler.set_context(array, is_array_of_tables: true)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_13(val, _values, result)
     array = @handler.end_(:table); @handler.set_context(array)
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_15(val, _values, result)
     @handler.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_16(val, _values, result)
     @handler.push(val[0])
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_28(val, _values, result)
     @handler.start_(:inline)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_29(val, _values, result)
          array = @handler.end_(:inline)
      array.map!.with_index{ |n,i| i.even? ? n.to_sym : n } if @handler.symbolize_keys
      @handler.push(Hash[*array])

    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_33(val, _values, result)
          array = @handler.end_(:inline)
      array.each { |key| @handler.push(key) }
      @handler.start_(:inline)
      @handler.push(val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_34(val, _values, result)
     @handler.push(val[0])
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_36(val, _values, result)
          keys = @handler.end_(:keys)
      @handler.push(keys.pop)
      @handler.assign(keys)

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_37(val, _values, result)
     @handler.push(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_38(val, _values, result)
     val[2].split('.').each { |k| @handler.push(k) }
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_39(val, _values, result)
          keys = val[0].split('.')
      @handler.start_(:keys)
      keys.each { |key| @handler.push(key) }

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_40(val, _values, result)
     @handler.start_(:keys); @handler.push(val[0])
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_51(val, _values, result)
     array = @handler.end_(:array); @handler.push(array)
    result
  end
.,.,

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_53(val, _values, result)
     array = @handler.end_(:array); @handler.push(array)
    result
  end
.,.,

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_55(val, _values, result)
     @handler.start_(:array)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_56(val, _values, result)
     @handler.push(val[0])
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_62(val, _values, result)
     result = val[0].to_f
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_63(val, _values, result)
     result = (val[0][0] == '-' ? -1 : 1) * Float::INFINITY
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_64(val, _values, result)
     result = Float::NAN
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_65(val, _values, result)
     result = val[0].to_i
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_66(val, _values, result)
     result = val[0].to_i(16)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_67(val, _values, result)
     result = val[0].to_i(8)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 133)
  def _reduce_68(val, _values, result)
     result = val[0].to_i(2)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_69(val, _values, result)
     result = true
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_70(val, _values, result)
     result = false
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_71(val, _values, result)
     result = Time.new(*val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_72(val, _values, result)
     result = LocalDateTime.new(*val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_73(val, _values, result)
     result = LocalDate.new(*val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_74(val, _values, result)
     result = LocalTime.new(*val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_75(val, _values, result)
     result = StringUtils.replace_escaped_chars(StringUtils.multiline_replacements(val[0]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_76(val, _values, result)
     result = StringUtils.replace_escaped_chars(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_77(val, _values, result)
     result = StringUtils.strip_spaces(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_78(val, _values, result)
     result = val[0]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
end   # module Tomlrb
