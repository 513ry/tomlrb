#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Tomlrb
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    11,    10,    10,    23,    24,    10,    19,     7,     7,    38,
    37,    34,    35,    36,    29,    10,    46,    26,    20,    21,
    47,    14,    38,    37,    34,    35,    36,    29,    42,    38,
    37,    34,    35,    36,    29,    42,    38,    37,    34,    35,
    36,    29,    10,    25,    39,    10,    44 ]

racc_action_check = [
     1,     0,     1,    16,    16,     8,     9,     0,     1,    19,
    19,    19,    19,    19,    19,     7,    43,    19,    11,    13,
    43,     7,    28,    28,    28,    28,    28,    28,    28,    47,
    47,    47,    47,    47,    47,    47,    25,    25,    25,    25,
    25,    25,    14,    18,    22,    24,    39 ]

racc_action_pointer = [
    -1,     0,   nil,   nil,   nil,   nil,   nil,    13,     3,    -4,
   nil,    18,   nil,    10,    40,   nil,    -9,   nil,    33,     6,
   nil,   nil,    35,   nil,    43,    33,   nil,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
   nil,   nil,   nil,     7,   nil,   nil,   nil,    26,   nil ]

racc_action_default = [
   -33,   -33,    -2,    -3,    -4,    -5,    -6,   -33,   -33,   -33,
   -32,   -33,    -1,   -33,   -33,    -8,   -33,   -12,   -33,   -26,
    49,    -7,   -33,   -10,   -33,   -26,    -9,   -13,   -26,   -19,
   -22,   -23,   -24,   -25,   -27,   -28,   -29,   -30,   -31,   -33,
   -11,   -14,   -15,   -33,   -21,   -16,   -17,   -26,   -18 ]

racc_goto_table = [
    43,    41,    17,     1,    13,    18,     2,    12,    15,    16,
    45,    22,   nil,   nil,   nil,   nil,   nil,   nil,    40,    43,
    48,    18 ]

racc_goto_check = [
    11,    14,     5,     1,     7,     7,     2,     2,     9,    10,
    15,     7,   nil,   nil,   nil,   nil,   nil,   nil,     5,    11,
    14,     7 ]

racc_goto_pointer = [
   nil,     3,     6,   nil,   nil,    -6,   nil,    -3,   nil,     0,
     1,   -28,   nil,   nil,   -27,   -33,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     9,     8,   nil,
   nil,    27,    31,    28,   nil,   nil,   nil,    30,    32,    33 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 15, :_reduce_none,
  1, 15, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  1, 16, :_reduce_none,
  3, 17, :_reduce_7,
  2, 20, :_reduce_none,
  3, 22, :_reduce_9,
  2, 23, :_reduce_none,
  3, 24, :_reduce_none,
  1, 24, :_reduce_none,
  3, 19, :_reduce_13,
  2, 26, :_reduce_none,
  1, 28, :_reduce_15,
  2, 28, :_reduce_none,
  1, 29, :_reduce_17,
  2, 29, :_reduce_none,
  1, 27, :_reduce_19,
  1, 30, :_reduce_none,
  5, 18, :_reduce_21,
  1, 25, :_reduce_22,
  1, 25, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  0, 33, :_reduce_none,
  1, 33, :_reduce_27,
  1, 33, :_reduce_28,
  1, 33, :_reduce_29,
  1, 33, :_reduce_30,
  1, 32, :_reduce_none,
  1, 21, :_reduce_none ]

racc_reduce_n = 33

racc_shift_n = 49

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :STRING => 3,
  :DATETIME => 4,
  :NUMBER => 5,
  :TRUE => 6,
  :FALSE => 7,
  "[" => 8,
  "]" => 9,
  "=" => 10,
  "{" => 11,
  "}" => 12,
  "," => 13 }

racc_nt_base = 14

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "STRING",
  "DATETIME",
  "NUMBER",
  "TRUE",
  "FALSE",
  "\"[\"",
  "\"]\"",
  "\"=\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "$start",
  "expressions",
  "expression",
  "table",
  "array_of_tables",
  "assignment",
  "inline_table_assignment",
  "identifier",
  "inline_table_start",
  "inline_table_end",
  "inline_values",
  "value",
  "array",
  "start_array",
  "array_continued",
  "array_next",
  "end_array",
  "scalar",
  "string",
  "literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_7(val, _values, result)
     @handler.set_context(val[1]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_9(val, _values, result)
     @handler.set_context(val[0]) 
    result
  end
.,.,

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_13(val, _values, result)
     @handler.assign(val[0]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_15(val, _values, result)
     @handler.end_array 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_17(val, _values, result)
     @handler.end_array 
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_19(val, _values, result)
     @handler.start_array 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_21(val, _values, result)
     @handler.set_context(val[2], is_array_of_tables: true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_22(val, _values, result)
     @handler.push(val[0]) 
    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_27(val, _values, result)
     n = val[0]; result = n.count('.') > 0 ? n.to_f : n.to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_28(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_29(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_30(val, _values, result)
     result = Time.parse(val[0]) 
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Tomlrb
